plugins {
	id 'fabric-loom' version '1.5-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

loom {
	runs {
		//
		// This adds a new gradle task that runs the datagen API: "gradlew runDatagenClient"
		//
		datagenClient {
			inherit client
			name "Data Generation"
			vmArg "-Dfabric-api.datagen"
			vmArg "-Dfabric-api.datagen.output-dir=${file("src/main/generated")}"
			vmArg "-Dfabric-api.datagen.modid=${archives_base_name}"

			runDir "build/datagen"
		}
	}
}

sourceSets {
	main {
		resources {
			srcDirs += [
					'src/main/generated'
			]
		}
	}
}

repositories {
	mavenCentral()
	maven {
		//ModMenu
		name = "terraformersmc maven"
		url = "https://maven.terraformersmc.com"
	}
	maven {
		// location of the maven that hosts JEI files before January 2023
		name = "Progwml6's maven"
		url = "https://dvs1.progwml6.com/files/maven/"
	}
	maven {
		// location of the maven that hosts JEI files since January 2023
		name = "Jared's maven"
		url = "https://maven.blamejared.com/"
	}
	maven {
		// location of a maven mirror for JEI files, as a fallback
		name = "ModMaven"
		url = "https://modmaven.dev"
	}
	maven {
		// CC:Tweaked
		name = "Squiddev maven cct"
		url = 'https://squiddev.cc/maven/'
	}
	maven {
		name = "Modrinth"
		url = "https://api.modrinth.com/maven"
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"
	modCompileOnlyApi("mezz.jei:jei-${minecraft_version}-common-api:${jei_version}")
	modCompileOnlyApi("mezz.jei:jei-${minecraft_version}-fabric-api:${jei_version}")
	// at runtime, use the full JEI jar for Fabric
	modRuntimeOnly("mezz.jei:jei-${minecraft_version}-fabric:${jei_version}")

	modImplementation "cc.tweaked:cc-tweaked-${minecraft_version}-fabric:${cc_version}"

	include modApi("teamreborn:energy:${team_reborn_energy_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}
	include implementation("com.electronwill.night-config:toml:${nightconfig_version}")
	include implementation("com.electronwill.night-config:core:${nightconfig_version}")

	modImplementation  "maven.modrinth:telluriumforge:${telluriumforge_version}-fabric"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	repositories {

	}
}