plugins {
    id 'java-library'
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.neoforged.gradle.userdev' version '7.0.80'
}

version = mod_version
group = mod_group_id

base {
    archivesName = mod_id
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

//minecraft.accessTransformers.file rootProject.file('src/main/resources/META-INF/accesstransformer.cfg')
//minecraft.accessTransformers.entry public net.minecraft.client.Minecraft textureManager # textureManager
subsystems {
    parchment {
        minecraftVersion = "1.20.2"
        mappingsVersion = "2023.12.10"
    }
}

runs {
    configureEach {

        systemProperty 'forge.logging.markers', 'REGISTRIES'


        systemProperty 'forge.logging.console.level', 'debug'

        modSource project.sourceSets.main
    }

    client {
        systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
    }

    server {
        systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
        programArgument '--nogui'
    }

    gameTestServer {
        systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
    }

    data {
        programArguments.addAll '--mod', project.mod_id, '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    mavenLocal()
    maven {
        name = "Jared's maven"
        url = "https://maven.blamejared.com/"
    }
    maven {
        url "https://maven.shedaniel.me/"
    }
    maven {
        // CC:Tweaked
        name = "Squiddev maven cct"
        url = 'https://squiddev.cc/maven/'
    }
    exclusiveContent {
        forRepository {
            maven {
                name = "Modrinth"
                url = "https://api.modrinth.com/maven"
            }
        }
        filter {
            includeGroup "maven.modrinth"
        }
    }

}

dependencies {
    implementation "net.neoforged:neoforge:${neo_version}"

    compileOnly "mezz.jei:jei-${mc_version}-common-api:${jei_version}"
    compileOnly "mezz.jei:jei-${mc_version}-neoforge-api:${jei_version}"
    runtimeOnly "mezz.jei:jei-${mc_version}-neoforge:${jei_version}"

    implementation "cc.tweaked:cc-tweaked-${mc_version}-forge-api:${cc_version}"
    implementation "cc.tweaked:cc-tweaked-${mc_version}-forge:${cc_version}"

//    runtimeOnly "maven.modrinth:cofh-core:${thermal_version}"
//    runtimeOnly "maven.modrinth:thermal-expansion:${thermal_version}"
//    runtimeOnly "maven.modrinth:thermal-foundation:${thermal_version}"

    runtimeOnly "maven.modrinth:mekanism:${mekanism_version}"            // Mekanism: Core
    runtimeOnly "maven.modrinth:mekanism-additions:${mekanism_version}"  // Mekanism: Additions
    runtimeOnly "maven.modrinth:mekanism-generators:${mekanism_version}" // Mekanism: Generators
    runtimeOnly "maven.modrinth:mekanism-tools:${mekanism_version}"      // Mekanism: Tools

    runtimeOnly "maven.modrinth:powah:${powah_version}-neoforge"

    implementation "maven.modrinth:architectury-api:${architectury_version}+neoforge"

    implementation "maven.modrinth:cloth-config:${cloth_config_version}+neoforge"
}

tasks.withType(ProcessResources).configureEach {
    var replaceProperties = [
            mc_version          : mc_version, minecraft_version_range: minecraft_version_range,
            neo_version         : neo_version, neo_version_range: neo_version_range,
            loader_version_range: loader_version_range,
            mod_id              : mod_id, mod_name: mod_name, mod_license: mod_license, mod_version: mod_version,
            mod_authors         : mod_authors, mod_description: mod_description,
            cc_version          : cc_version, cc_version_range: cc_version_range
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml']) {
        expand replaceProperties + [project: project]
    }
}

publishing {
    publications {
        register('mavenJava', MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/repo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
